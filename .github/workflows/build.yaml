on:
  push:
    branches: [main]
    paths-ignore:
    - "README.md"
    - "LICENCE.md"
    - ".gitignore"
jobs:
  # Current matrix:
  #
  # include:
  # - version: "7.3"
  #   variant: "fpm"
  #   source_image: "php:7.3.29-fpm-alpine3.14"
  # - version: "7.3"
  #   variant: "cli"
  #   source_image: "php:7.3.29-cli-alpine3.14"
  # - version: "7.4"
  #   variant: "fpm"
  #   source_image: "php:7.4.21-fpm-alpine3.14"
  # - version: "7.4"
  #   variant: "cli"
  #   source_image: "php:7.4.21-cli-alpine3.14"
  # - version: "8.0"
  #   variant: "fpm"
  #   source_image: "php:8.0.8-fpm-alpine3.14"
  # - version: "8.0"
  #   variant: "cli"
  #   source_image: "php:8.0.8-cli-alpine3.14"
  # - version: "8.0"
  #   variant: "apache"
  #   source_image: "php:8.0.9-apache-bullseye"
  # - version: "7.4"
  #   variant: "apache"
  #   source_image: "php:7.4.23-apache-bullseye"

  #
  # To convert this to stringified JSON for use in the "matrix" job, paste the list above into matrix.yml, and run the
  # following command:
  #
  #   yq e . -j matrix.yml | jq -c '.|@json' | awk '{print substr($0, 2, length($0) - 2)}'
  vars:
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      date: ${{ steps.set-date.outputs.date }}
    steps:
    # This is done so we don't have to repeat the matrix every job.
    - name: set matrix
      id: set-matrix
      run: |
        echo "::set-output name=matrix::{\"include\":[{\"version\":\"7.3\",\"variant\":\"fpm\",\"source_image\":\"php:7.3.29-fpm-alpine3.14\"},{\"version\":\"7.3\",\"variant\":\"cli\",\"source_image\":\"php:7.3.29-cli-alpine3.14\"},{\"version\":\"7.4\",\"variant\":\"fpm\",\"source_image\":\"php:7.4.21-fpm-alpine3.14\"},{\"version\":\"7.4\",\"variant\":\"cli\",\"source_image\":\"php:7.4.21-cli-alpine3.14\"},{\"version\":\"8.0\",\"variant\":\"fpm\",\"source_image\":\"php:8.0.8-fpm-alpine3.14\"},{\"version\":\"8.0\",\"variant\":\"cli\",\"source_image\":\"php:8.0.8-cli-alpine3.14\"},{\"version\":\"8.0\",\"variant\":\"apache\",\"source_image\":\"php:8.0.9-apache-bullseye\"},{\"version\":\"7.4\",\"variant\":\"apache\",\"source_image\":\"php:7.4.23-apache-bullseye\"}]}"
    - name: set date
      id: set-date
      run: |
        echo "::set-output name=date::$(date +%Y%m%d)"

  build:
    needs: [vars]
    runs-on: self-hosted
    strategy:
      matrix: ${{ fromJson(needs.vars.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1

    # Build variant
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache-variant
        key: ${{ matrix.version }}-${{ matrix.variant }}-${{ github.sha }}
        restore-keys: ${{ matrix.version }}-${{ matrix.variant }}-

    # Build fpm & cli
    - name: build ${{ matrix.variant }}
      if: "matrix.variant == 'fpm' || matrix.variant == 'cli'"
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: SOURCE_IMAGE=${{ matrix.source_image }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        outputs: type=local,dest=/tmp/.buildx-output-variant
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-to: type=local,dest=/tmp/.buildx-cache-variant-new
        cache-from: type=local,src=/tmp/.buildx-cache-variant
        target: variant

    # Build apache
    - name: build apache
      if: "matrix.variant == 'apache'"
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: SOURCE_IMAGE=${{ matrix.source_image }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        outputs: type=local,dest=/tmp/.buildx-output-variant
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-to: type=local,dest=/tmp/.buildx-cache-variant-new
        cache-from: type=local,src=/tmp/.buildx-cache-variant
        file: apache.Dockerfile

    - name: move variant cache  # temp fix for https://github.com/docker/build-push-action/issues/252 & https://github.com/moby/buildkit/issues/1896.
      run: rm -rf /tmp/.buildx-cache-variant && mv /tmp/.buildx-cache-variant-new /tmp/.buildx-cache-variant

    # Build nginx
    - uses: actions/cache@v2
      if: "matrix.variant == 'fpm'"
      with:
        path: /tmp/.buildx-cache-nginx
        key: ${{ matrix.version }}-nginx-${{ github.sha }}
        restore-keys: ${{ matrix.version }}-nginx-
    - name: build nginx
      uses: docker/build-push-action@v2
      if: "matrix.variant == 'fpm'"
      with:
        context: .
        build-args: SOURCE_IMAGE=${{ matrix.source_image }}
        tags: ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx
        outputs: type=local,dest=/tmp/.buildx-output-nginx
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-to: type=local,dest=/tmp/.buildx-cache-nginx-new
        cache-from: |
          type=local,src=/tmp/.buildx-cache-nginx
          type=local,src=/tmp/.buildx-cache-variant
        target: nginx
    - name: move nginx cache
      if: "matrix.variant == 'fpm'"
      run: rm -rf /tmp/.buildx-cache-nginx && mv /tmp/.buildx-cache-nginx-new /tmp/.buildx-cache-nginx

  push:
    needs: [build, vars]
    if: "github.ref == 'refs/heads/main'"
    runs-on: self-hosted
    strategy:
      matrix: ${{ fromJson(needs.vars.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - name: log in (docker hub)
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_LOGIN }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # Push variant.
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache-variant
        key: ${{ matrix.version }}-${{ matrix.variant }}-${{ github.sha }}
        restore-keys: ${{ matrix.version }}-${{ matrix.variant }}-
    - name: build variant
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: SOURCE_IMAGE=${{ matrix.source_image }}
        tags: |
          ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
          ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.vars.outputs.date }}
        outputs: type=registry
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-from: type=local,src=/tmp/.buildx-cache-variant
        target: variant

    # Push nginx.
    - uses: actions/cache@v2
      if: "matrix.variant == 'fpm'"
      with:
        path: /tmp/.buildx-cache-nginx
        key: ${{ matrix.version }}-nginx-${{ github.sha }}
        restore-keys: ${{ matrix.version }}-nginx-
    - name: build nginx
      uses: docker/build-push-action@v2
      if: "matrix.variant == 'fpm'"
      with:
        context: .
        build-args: SOURCE_IMAGE=${{ matrix.source_image }}
        tags: |
          ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx
          ${{ github.repository_owner }}/php:${{ matrix.version }}-nginx-${{ needs.vars.outputs.date }}
        outputs: type=registry
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        cache-from: type=local,src=/tmp/.buildx-cache-nginx
        target: nginx
