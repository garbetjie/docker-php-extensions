#!/usr/bin/env sh

# Number of children should be determined by the amount of available memory.
if echo "$FPM_PM_MAX_CHILDREN" | grep -qF '%'; then
  cgroup_limit="$(cat /sys/fs/cgroup/memory.max)"

  # No memory limit defined.
  if [ "$cgroup_limit" = "max" ]; then
    container_memory_limit_in_mb="$(grep "MemTotal:" /proc/meminfo | awk '{ print $2 / 1024 }')"
  else
    container_memory_limit_in_mb="$(echo "$cgroup_limit" | awk '{ print $0 / 1024 / 1024 }')"
  fi

  # Determine PHP memory limit in MB
  if echo "$PHP_MEMORY_LIMIT" | grep -qE '[Mm]$'; then
    php_memory_limit_in_mb="$PHP_MEMORY_LIMIT"
  elif echo "$PHP_MEMORY_LIMIT" | grep -qE '[Gg]$'; then
    php_memory_limit_in_mb="$((PHP_MEMORY_LIMIT * 1024))"
  elif echo "$PHP_MEMORY_LIMIT" | grep -qE '[Kk]$'; then
    php_memory_limit_in_mb="$((PHP_MEMORY_LIMIT / 1024))"
  elif [ "$PHP_MEMORY_LIMIT" = "-1" ]; then
    php_memory_limit_in_mb="$container_memory_limit_in_mb"
  else
    php_memory_limit_in_mb="$((PHP_MEMORY_LIMIT / 1024 / 1024))"
  fi

  FPM_PM_MAX_CHILDREN="$(
    awk \
      -v php_limit="$php_memory_limit_in_mb" \
      -v container_limit="$container_memory_limit_in_mb" \
      -v ratio="$FPM_PM_MAX_CHILDREN" \
      'BEGIN { print int((container_limit * (int(ratio) / 100)) / php_limit) }'
  )"

  # Ensure there's at least one FPM process.
  if [ "$FPM_PM_MAX_CHILDREN" -lt 1 ]; then
    FPM_PM_MAX_CHILDREN=1
  fi

  export FPM_PM_MAX_CHILDREN
fi

cat <<EOT > /usr/local/etc/php-fpm.d/zz-pool-www.conf
[www]
user = app
group = app
access.log = /dev/null
listen = /var/run/php-fpm.sock
listen.owner = app
listen.group = app
pm = ${FPM_PM}
pm.max_children = ${FPM_PM_MAX_CHILDREN}
pm.min_spare_servers = ${FPM_PM_MIN_SPARE_SERVERS}
pm.max_spare_servers = ${FPM_PM_MAX_SPARE_SERVERS}
pm.max_requests = ${FPM_PM_MAX_REQUESTS}
request_terminate_timeout = ${FPM_REQUEST_TERMINATE_TIMEOUT}
slowlog = ${FPM_SLOWLOG}
request_slowlog_timeout = ${FPM_REQUEST_SLOWLOG_TIMEOUT}
clear_env = ${FPM_CLEAR_ENV:-false}
EOT